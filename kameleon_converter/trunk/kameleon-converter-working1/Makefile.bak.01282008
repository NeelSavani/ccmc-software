# kameleon Makefile

## SET THE C COMPILER

#CC	= gcc -g3
CC	= gcc

## SET THE FORTRAN COMPILER

#F77 	= g77
F77 	= gfortran

CFLAGS = -D$(F77) -DNETCDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces -DFITS

DEBUG_FLAG =

F77_SRC_DIR 	= ./f77_src
C_SRC_DIR 	= ./c_src
LOCAL_INC_DIR	= ./inc
LOCAL_LIB_DIR	= ./lib

### HDF has a bunch of header files, keep them together
LOCAL_HDF_INC = ${LOCAL_INC_DIR}/hdf_inc
#LOCAL_HDF_INC = /Users/mmmaddox/HDF_all/4.2r1-macosx/include
#LOCAL_HDF_INC = /Users/mmmaddox/HDF_all/local_hdf4/include

LIB_READ_UCLA = ${LOCAL_LIB_DIR}/libread_ucla_ggcm.a
LIB_READ_NETCDF = ${LOCAL_LIB_DIR}/libread_netcdf.a
LIB_READ_FITS = ${LOCAL_LIB_DIR}/libread_fits.a
LIB_READ_HDF = ${LOCAL_LIB_DIR}/libread_hdf.a

######## Adjust CDF library path as necessary

LIB_CDF	= ${LOCAL_LIB_DIR}/libcdf.a
#LIB_CDF	= ${CDF_LIB}/libcdf.a

######## Adjust NETCDF library path as necessary

LIB_NETCDF	= ${LOCAL_LIB_DIR}/libnetcdf.a

######## Adjust FITS library path as necessary

LIB_FITS		= ${LOCAL_LIB_DIR}/libcfitsio.a

######## Adjust HDF library path ( and all HDF dependencies ) as necessary

LIB_HDF1		= ${LOCAL_LIB_DIR}/libmfhdf.a
LIB_HDF2		= ${LOCAL_LIB_DIR}/libdf.a
LIB_JPEG		= ${LOCAL_LIB_DIR}/libjpeg.a
LIB_SZ		= ${LOCAL_LIB_DIR}/libsz.a
LIB_Z		= ${LOCAL_LIB_DIR}/libz.a

####### FOLLOWING LINE incorporates all hdf library paths and dependencies into one macro

LIB_HDF_WITH_ALL_DEP = ${LIB_HDF1} ${LIB_HDF2} ${LIB_JPEG} ${LIB_SZ} ${LIB_Z}

######## Adjust ARGTABLE 2 library path as necessary

LIB_ARG_TABLE_2 = ${LOCAL_LIB_DIR}/libargtable2.a

LIB_ALL = ${LIB_READ_UCLA} ${LIB_CDF} ${LIB_ARG_TABLE_2} ${LIB_READ_NETCDF} ${LIB_NETCDF_LINK} ${LIB_READ_FITS} ${LIB_FITS_LINK} ${LIB_READ_HDF} ${LIB_HDF_LINK}

### SET THE OS SPECIFIC COMPILER FLAGS

### NOTE That lg2c has become lgfortran with gnu compiler version 4.1.1, adjust accordingly...

#DARWIN_SPECIFIC_FLAGS = -L/sw/lib -lc -lm -lg2c -lSystemStubs
DARWIN_SPECIFIC_FLAGS = -L/usr/local/lib -lc -lm -lSystemStubs -lgfortran
SUNOS_SPECIFIC_FLAGS = -L/opt/SUNWspro/lib -lF77 -lsunmath -lfsu -lfai -lm -lc -lc2 -lg2c
LINUX_SPECIFIC_FLAGS = -L/usr/lib/gcc-lib/x86_64-redhat-linux/3.2.3/ -lc -lm -lg2c

#############################################################################################################
########################### ADVANCED USERS ONLY BEYOND THIS POINT ###########################################
#############################################################################################################

UCLA_READ_F77_SRC =  ${F77_SRC_DIR}/datf11.f ${F77_SRC_DIR}/datf21.f ${F77_SRC_DIR}/datf31.f ${F77_SRC_DIR}/end0.f ${F77_SRC_DIR}/f77_file_close.f \
					${F77_SRC_DIR}/f77_file_open.f ${F77_SRC_DIR}/f77_file_rewind.f ${F77_SRC_DIR}/getf11.f ${F77_SRC_DIR}/getf31.f ${F77_SRC_DIR}/rdn2.f \
					${F77_SRC_DIR}/wrn2.f ${F77_SRC_DIR}/wrndec.f ${F77_SRC_DIR}/wrnenc.f
					
UCLA_READ_F77_OBJ = datf11.o datf21.o datf31.o end0.o f77_file_close.o f77_file_open.o f77_file_rewind.o getf11.o getf31.o rdn2.o wrn2.o wrndec.o wrnenc.o

READ_C_SRC	= 	${C_SRC_DIR}/main_conversion_driver_V5.c ${C_SRC_DIR}/cdf_status_handler.c ${C_SRC_DIR}/main_read_driver.c ${C_SRC_DIR}/main_write_driver.c \
				${C_SRC_DIR}/read_batsrus.c ${C_SRC_DIR}/read_database.c ${C_SRC_DIR}/linear_minmax_search.c ${C_SRC_DIR}/date_formatter.c ${C_SRC_DIR}/strsplit.c \
				${C_SRC_DIR}/ccmc_structure_manager.c ${C_SRC_DIR}/write_batsrus_structure.c ${C_SRC_DIR}/write_structures_2_cdf.c ${C_SRC_DIR}/write_ucla_ggcm_structure.c \
				${C_SRC_DIR}/endian_flip.c ${C_SRC_DIR}/read_ctip.c ${C_SRC_DIR}/write_enlil_structure.c ${C_SRC_DIR}/write_kpvt_structure.c ${C_SRC_DIR}/write_msfc_tvm_structure.c \
				${C_SRC_DIR}/write_mas_structure.c

READ_C_OBJ	= main_conversion_driver_V5.o cdf_status_handler.o main_read_driver.o main_write_driver.o read_batsrus.o read_database.o linear_minmax_search.o date_formatter.o \
			strsplit.o ccmc_structure_manager.o write_batsrus_structure.o write_structures_2_cdf.o write_ucla_ggcm_structure.o endian_flip.o read_ctip.o write_enlil_structure.o \
			write_kpvt_structure.o write_msfc_tvm_structure.o write_mas_structure.o

### DON'T CHANGE BLOCK
### DON"T CHANGE THE FOLLOWING "DON'T CHANGE" LINE(S), ITS A WORKAROUND 
### TO DISPLAY INFO ABOUT THE TARGET BUT IS NOT USED IN 
### LINKING AS THE REGULAR MACRO ie LIB_NETCDF MAYBE SET TO 
### BLANK IF IT'S NOT FOUND.  THIS ALLOWS THE BUILD TO 
### CONTINUE WITHOUT THE LIB BUT STILL COMPLAINS: ..libnetcdf.a: No such file or directory 
###
LIB_NETCDF_LINK = ${LIB_NETCDF}
LIB_FITS_LINK = ${LIB_FITS}
LIB_HDF_LINK = ${LIB_HDF_WITH_ALL_DEP}
###
#################### END OF DON'T CHANGE BLOCK #################

# check for libnetcdf.a to determine how we build... call with_netcdf to build with NETCDF with_out_netcdf to NOT build with NETCDF

first:
	@echo "Checking for libnetcdf.a: "`find ./lib -name libnetcdf.a`
	@case `find ./lib -name libnetcdf.a` in \
		"./lib/libnetcdf.a") make with_netcdf \
		"CFLAGS = -D$(F77) -DNETCDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" ;;\
		*) make with_out_netcdf \
		"CFLAGS = -D$(F77) -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK = " ;;\
	esac

# check for libcfitsio.a to determine how we build...
# with_netcdf-with_fits to build with NETCDF & FITS 
# with_netcdf-with_out_fits to build with NETCDF & NOT FITS
# with_out_netcdf-with_fits to build with NO NETCDF & FITS 
# with_out_netcdf-with_out_fits to build with NO NETCDF & NO FITS

with_netcdf:
	@echo "Checking for libcfitsio.a: "`find ./lib -name libcfitsio.a`
	@case `find ./lib -name libcfitsio.a` in \
		"./lib/libcfitsio.a") make with_netcdf-with_fits \
		"CFLAGS = -D$(F77) -DNETCDF -DFITS -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = ${LIB_FITS}" ;;\
		*) make with_netcdf-with_out_fits \
		"CFLAGS = -D$(F77) -DNETCDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = " ;;\
	esac

with_out_netcdf:
	@echo "Checking for libcfitsio.a: "`find ./lib -name libcfitsio.a`
	@case `find ./lib -name libcfitsio.a` in \
		"./lib/libcfitsio.a") make with_out_netcdf-with_fits \
		"CFLAGS = -D$(F77) -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK = " "LIB_FITS_LINK = ${LIB_FITS}" -DFITS;;\
		*) make with_out_netcdf-with_out_fits \
		"CFLAGS = -D$(F77) -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK = " "LIB_FITS_LINK = " ;;\
	esac
	
# check for libmfhdf.a to determine how we build - HDF has 5 dependencies, just look for one and verify all later in build

with_netcdf-with_fits:
	@echo "Checking for libmfhdf.a: "`find ./lib -name libmfhdf.a`
	@case `find ./lib -name libmfhdf.a` in \
		"./lib/libmfhdf.a") make kameleon \
		"CFLAGS = -D$(F77) -DNETCDF -DFITS -DHDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = ${LIB_FITS}" "LIB_HDF_LINK = ${LIB_HDF_WITH_ALL_DEP}";;\
		*) make kameleon \
		"CFLAGS = -D$(F77) -DNETCDF -DFITS -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = ${LIB_FITS}" "LIB_HDF_LINK = ";;\
	esac

with_netcdf-with_out_fits:
	@echo "Checking for libmfhdf.a: "`find ./lib -name libmfhdf.a`
	@case `find ./lib -name libmfhdf.a` in \
		"./lib/libmfhdf.a") make kameleon \
		"CFLAGS = -D$(F77) -DNETCDF -DHDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = " "LIB_HDF_LINK = ${LIB_HDF_WITH_ALL_DEP}";;\
		*) make kameleon \
		"CFLAGS = -D$(F77) -DNETCDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK	= ${LIB_NETCDF}" "LIB_FITS_LINK = " "LIB_HDF_LINK = ";;\
	esac
	
with_out_netcdf-with_fits:
	@echo "Checking for libmfhdf.a: "`find ./lib -name libmfhdf.a`
	@case `find ./lib -name libmfhdf.a` in \
		"./lib/libmfhdf.a") make kameleon \
		"CFLAGS = -D$(F77) -DFITS -DHDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= " "LIB_FITS_LINK = ${LIB_FITS}" "LIB_HDF_LINK = ${LIB_HDF_WITH_ALL_DEP}";;\
		*) make kameleon \
		"CFLAGS = -D$(F77) -DFITS -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK	= " "LIB_FITS_LINK = ${LIB_FITS}" "LIB_HDF_LINK = ";;\
	esac

with_out_netcdf-with_out_fits:
	@echo "Checking for libmfhdf.a: "`find ./lib -name libmfhdf.a`
	@case `find ./lib -name libmfhdf.a` in \
		"./lib/libmfhdf.a") make kameleon \
		"CFLAGS = -D$(F77) -DHDF -Wall -ansi -Wno-unused-variable -Wno-missing-braces"  \
		"LIB_NETCDF_LINK	= " "LIB_FITS_LINK = " "LIB_HDF_LINK = ${LIB_HDF_WITH_ALL_DEP}";;\
		*) make kameleon \
		"CFLAGS = -D$(F77) -Wall -ansi -Wno-unused-variable -Wno-missing-braces" \
		"LIB_NETCDF_LINK	= " "LIB_FITS_LINK = " "LIB_HDF_LINK = ";;\
	esac



# by now we should know how to build kameleon and what external libraries are 
# available to us

# automatically determine OS

#kameleon: ${READ_C_OBJ} ${LIB_READ_UCLA} ${LIB_CDF} ${LIB_READ_NETCDF}
kameleon:
	@echo "Determining Operating System: "`uname`
	@case `uname` in \
		"Darwin") make kameleon-4-mac \
				"FLAGS=${LIB_ALL} -I${LOCAL_INC_DIR} ${DARWIN_SPECIFIC_FLAGS}" ;;\
		"Linux") make kameleon-4-linux \
				"FLAGS=${LIB_ALL} -I${LOCAL_INC_DIR} ${LINUX_SPECIFIC_FLAGS}" ;;\
		"SunOS") make kameleon-4-sun \
				"FLAGS=${LIB_ALL} -I${LOCAL_INC_DIR} ${SUNOS_SPECIFIC_FLAGS}" ;;\
		*) echo "Current Operating System is NOT supported" ;;\
	esac

# MAC-SPECIFIC

kameleon-4-mac : ${READ_C_OBJ} ${LIB_READ_UCLA} ${LIB_CDF} ${LIB_READ_NETCDF} ${LIB_READ_FITS} ${LIB_READ_HDF}
	${CC} -o kameleon ${READ_C_OBJ} ${FLAGS}
	@echo ""
	@echo "KAMELEON"

# LINUX-SPECIFIC

kameleon-4-linux : ${READ_C_OBJ} ${LIB_READ_UCLA} ${LIB_CDF} ${LIB_READ_NETCDF} ${LIB_READ_FITS} ${LIB_READ_HDF}
	${CC} -o kameleon ${READ_C_OBJ} ${FLAGS}
	@echo ""
	@echo "KAMELEON"

# SUN-SPECIFIC

kameleon-4-sun : ${READ_C_OBJ} ${LIB_READ_UCLA} ${LIB_CDF} ${LIB_READ_NETCDF} ${LIB_READ_FITS} ${LIB_READ_HDF}
	${CC} -o kameleon ${READ_C_OBJ} ${FLAGS}
	@echo ""
	@echo "KAMELEON"

${LOCAL_LIB_DIR}/libread_ucla_ggcm.a	: ${UCLA_READ_F77_OBJ}  read_ucla_ggcm_v3.o
	ar rc $@ ${UCLA_READ_F77_OBJ}  read_ucla_ggcm_v3.o
	ranlib $@
	
${LOCAL_LIB_DIR}/libread_netcdf.a	: ${LIB_NETCDF} read_enlil.o 
	ar rc $@ read_enlil.o ${LIB_NETCDF_LINK}
	ranlib $@
	
${LOCAL_LIB_DIR}/libread_fits.a	: ${LIB_FITS} read_kpvt.o read_msfc_tvm.o
	ar rc $@ read_kpvt.o read_msfc_tvm.o ${LIB_FITS_LINK}
	ranlib $@

${LOCAL_LIB_DIR}/libread_hdf.a : ${LIB_HDF_WITH_ALL_DEP} read_mas.o
	ar rc $@ read_mas.o ${LIB_HDF_LINK}
	ranlib $@

main_conversion_driver_V5.o : ${C_SRC_DIR}/main_conversion_driver_V5.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/main_conversion_driver_V5.c -I${LOCAL_INC_DIR}

cdf_status_handler.o : ${C_SRC_DIR}/cdf_status_handler.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/cdf_status_handler.c -I${LOCAL_INC_DIR}

main_read_driver.o : ${C_SRC_DIR}/main_read_driver.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/main_read_driver.c -I${LOCAL_INC_DIR}

main_write_driver.o : ${C_SRC_DIR}/main_write_driver.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/main_write_driver.c -I${LOCAL_INC_DIR}

read_batsrus.o : ${C_SRC_DIR}/read_batsrus.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_batsrus.c -I${LOCAL_INC_DIR}

write_batsrus_cdf.o : ${C_SRC_DIR}/write_batsrus_cdf.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_batsrus_cdf.c -I${LOCAL_INC_DIR}
	
write_ucla_ggcm_cdf.o : ${C_SRC_DIR}/write_ucla_ggcm_cdf.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_ucla_ggcm_cdf.c -I${LOCAL_INC_DIR}

read_ucla_ggcm_v3.o : ${C_SRC_DIR}/read_ucla_ggcm_v3.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_ucla_ggcm_v3.c -I${LOCAL_INC_DIR}

read_database.o : ${C_SRC_DIR}/read_database.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_database.c -I${LOCAL_INC_DIR}

linear_minmax_search.o : ${C_SRC_DIR}/linear_minmax_search.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/linear_minmax_search.c -I${LOCAL_INC_DIR}

date_formatter.o : ${C_SRC_DIR}/date_formatter.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/date_formatter.c -I${LOCAL_INC_DIR}

strsplit.o : ${C_SRC_DIR}/strsplit.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/strsplit.c -I${LOCAL_INC_DIR}

ccmc_structure_manager.o : ${C_SRC_DIR}/ccmc_structure_manager.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/ccmc_structure_manager.c -I${LOCAL_INC_DIR}

write_batsrus_structure.o : ${C_SRC_DIR}/write_batsrus_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_batsrus_structure.c -I${LOCAL_INC_DIR}

write_structures_2_cdf.o : ${C_SRC_DIR}/write_structures_2_cdf.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_structures_2_cdf.c -I${LOCAL_INC_DIR}

write_ucla_ggcm_structure.o : ${C_SRC_DIR}/write_ucla_ggcm_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_ucla_ggcm_structure.c -I${LOCAL_INC_DIR}

endian_flip.o : ${C_SRC_DIR}/endian_flip.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/endian_flip.c -I${LOCAL_INC_DIR}

read_ctip.o : ${C_SRC_DIR}/read_ctip.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_ctip.c -I${LOCAL_INC_DIR}
	
read_enlil.o : ${C_SRC_DIR}/read_enlil.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_enlil.c -I${LOCAL_INC_DIR}
	
write_enlil_structure.o : ${C_SRC_DIR}/write_enlil_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_enlil_structure.c -I${LOCAL_INC_DIR}

read_kpvt.o : ${C_SRC_DIR}/read_kpvt.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_kpvt.c -I${LOCAL_INC_DIR}

write_kpvt_structure.o : ${C_SRC_DIR}/write_kpvt_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_kpvt_structure.c -I${LOCAL_INC_DIR}

read_msfc_tvm.o : ${C_SRC_DIR}/read_msfc_tvm.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_msfc_tvm.c -I${LOCAL_INC_DIR}

write_msfc_tvm_structure.o : ${C_SRC_DIR}/write_msfc_tvm_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_msfc_tvm_structure.c -I${LOCAL_INC_DIR}

read_mas.o : ${C_SRC_DIR}/read_mas.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/read_mas.c -I${LOCAL_INC_DIR} -I${LOCAL_HDF_INC}

write_mas_structure.o : ${C_SRC_DIR}/write_mas_structure.c
	${CC} ${CFLAGS} -c ${DEBUG_FLAG} ${C_SRC_DIR}/write_mas_structure.c -I${LOCAL_INC_DIR}


#### UCLA_GGCM/OPenGGCM Fortran Stuff

datf11.o : ${F77_SRC_DIR}/datf11.f
	${F77} -c ${F77_SRC_DIR}/datf11.f

datf21.o : ${F77_SRC_DIR}/datf21.f
	${F77} -c ${F77_SRC_DIR}/datf21.f

datf31.o : ${F77_SRC_DIR}/datf31.f
	${F77} -c ${F77_SRC_DIR}/datf31.f

end0.o : ${F77_SRC_DIR}/end0.f
	${F77} -c ${F77_SRC_DIR}/end0.f

f77_file_close.o : ${F77_SRC_DIR}/f77_file_close.f
	${F77} -c ${F77_SRC_DIR}/f77_file_close.f

f77_file_open.o : ${F77_SRC_DIR}/f77_file_open.f
	${F77} -c ${F77_SRC_DIR}/f77_file_open.f

f77_file_rewind.o : ${F77_SRC_DIR}/f77_file_rewind.f
	${F77} -c ${F77_SRC_DIR}/f77_file_rewind.f

getf11.o : ${F77_SRC_DIR}/getf11.f
	${F77} -c ${F77_SRC_DIR}/getf11.f

getf31.o : ${F77_SRC_DIR}/getf31.f
	${F77} -c ${F77_SRC_DIR}/getf31.f

rdn2.o : ${F77_SRC_DIR}/rdn2.f
	${F77} -c ${F77_SRC_DIR}/rdn2.f

wrn2.o : ${F77_SRC_DIR}/wrn2.f
	${F77} -c ${F77_SRC_DIR}/wrn2.f

wrndec.o : ${F77_SRC_DIR}/wrndec.f
	${F77} -c ${F77_SRC_DIR}/wrndec.f

wrnenc.o : ${F77_SRC_DIR}/wrnenc.f
	${F77} -c ${F77_SRC_DIR}/wrnenc.f
	
##### Check for presence of CDF library

${LIB_CDF} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_CDF ENV variable as currently set ---> ${LIB_CDF}"
	@echo "YOU MAY NEED TO INSTALL the CDF library or modify Makefile to point to correct copy of libcdf.a"
	@echo "Build has died...see below---vv"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

##### Check for presence of NETCDF library

${LIB_NETCDF} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_NETCDF ENV variable as currently set ---> ${LIB_NETCDF}"
	@echo "converter will not be able to process any model output ( such as ENLIL ) written in netCDF format"
	@echo "YOU MAY NEED TO INSTALL the NETCDF library or modify the Makefile to point to correct copy of libnetcdf.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

##### Check for presence of FITS library

${LIB_FITS} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_FITS ENV variable as currently set ---> ${LIB_FITS}"
	@echo "converter will not be able to process any files ( such as KPVT ) written in FITS format"
	@echo "YOU MAY NEED TO INSTALL the FITS library or modify the Makefile to point to correct copy of libcfitsio.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

##### Check for presence of HDF library and all its dependencies

${LIB_HDF1} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_HDF1 ENV variable as currently set ---> ${LIB_HDF1}"
	@echo "converter will not be able to process any files ( such as Mas ) written in hdf format"
	@echo "YOU MAY NEED TO INSTALL the HDF library ( and dependencies: libdf.a, libmfhdf.a, libjpeg.a, libsz.a,"
	@echo "and libz.a ) or modify the Makefile to point to correct copy of libdf.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""
	
${LIB_HDF2} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_HDF2 ENV variable as currently set ---> ${LIB_HDF2}"
	@echo "converter will not be able to process any files ( such as Mas ) written in hdf format"
	@echo "YOU MAY NEED TO INSTALL the HDF library ( and dependencies: libdf.a, libmfhdf.a, libjpeg.a, libsz.a,"
	@echo "and libz.a ) or modify the Makefile to point to correct copy of libdmfhdf.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""
	
${LIB_JPEG} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_JPEG ENV variable as currently set ---> ${LIB_JPEG}"
	@echo "converter will not be able to process any files ( such as Mas ) written in hdf format"
	@echo "YOU MAY NEED TO INSTALL the HDF library ( and dependencies: libdf.a, libmfhdf.a, libjpeg.a, libsz.a,"
	@echo "and libz.a ) or modify the Makefile to point to correct copy of libjpeg.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

${LIB_SZ} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_SZ ENV variable as currently set ---> ${LIB_SZ}"
	@echo "converter will not be able to process any files ( such as Mas ) written in hdf format"
	@echo "YOU MAY NEED TO INSTALL the HDF library ( and dependencies: libdf.a, libmfhdf.a, libjpeg.a, libsz.a,"
	@echo "and libz.a ) or modify the Makefile to point to correct copy of libsz.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

${LIB_Z} :
	@echo ""
	@echo "---------------------------------------------------------------------------------------------------"
	@echo "ERROR!!!!!!!!!! $@ not found in LIB_Z ENV variable as currently set ---> ${LIB_Z}"
	@echo "converter will not be able to process any files ( such as Mas ) written in hdf format"
	@echo "YOU MAY NEED TO INSTALL the HDF library ( and dependencies: libdf.a, libmfhdf.a, libjpeg.a, libsz.a,"
	@echo "and libz.a ) or modify the Makefile to point to correct copy of libz.a"
	@echo "---------------------------------------------------------------------------------------------------"
	@echo ""

# CLEAN

clean :
	rm -f ${READ_C_OBJ} ${UCLA_READ_F77_OBJ} read_ucla_ggcm_v3.o read_enlil.o read_kpvt.o read_msfc_tvm.o read_mas.o
	
real_clean :
	rm -f ${READ_C_OBJ} ${UCLA_READ_F77_OBJ} read_ucla_ggcm_v3.o read_enlil.o read_kpvt.o read_msfc_tvm.o read_mas.o ${LIB_READ_UCLA} ${LIB_READ_NETCDF} ${LIB_READ_FITS} ${LIB_READ_HDF} kameleon


