/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package gov.nasa.gsfc.ccmc;

public class CCMC {
  public static double parseEPOCH3(String epString) {
    return CCMCJNI.parseEPOCH3(epString);
  }

  public static void encodeEPOCH3(double epoch, String epString) {
    CCMCJNI.encodeEPOCH3(epoch, epString);
  }

  public static Kameleon ccmc_Kameleon_new() {
    long cPtr = CCMCJNI.ccmc_Kameleon_new();
    return (cPtr == 0) ? null : new Kameleon(cPtr, false);
  }

  public static void ccmc_Kameleon_createNewInterpolator(Kameleon kameleon) {
    CCMCJNI.ccmc_Kameleon_createNewInterpolator(Kameleon.getCPtr(kameleon), kameleon);
  }

  public static int ccmc_Kameleon_open(Kameleon kameleon, String filename) {
    return CCMCJNI.ccmc_Kameleon_open(Kameleon.getCPtr(kameleon), kameleon, filename);
  }

  public static void ccmc_Kameleon_getModelName(Kameleon kameleon, String buffer) {
    CCMCJNI.ccmc_Kameleon_getModelName(Kameleon.getCPtr(kameleon), kameleon, buffer);
  }

  public static void ccmc_Kameleon_setMissingValue(Kameleon kameleon, float missingValue) {
    CCMCJNI.ccmc_Kameleon_setMissingValue(Kameleon.getCPtr(kameleon), kameleon, missingValue);
  }

  public static float ccmc_Kameleon_getMissingValue(Kameleon kameleon) {
    return CCMCJNI.ccmc_Kameleon_getMissingValue(Kameleon.getCPtr(kameleon), kameleon);
  }

  public static int ccmc_Kameleon_close(Kameleon kameleon) {
    return CCMCJNI.ccmc_Kameleon_close(Kameleon.getCPtr(kameleon), kameleon);
  }

  public static void ccmc_Kameleon_delete(Kameleon kameleon) {
    CCMCJNI.ccmc_Kameleon_delete(Kameleon.getCPtr(kameleon), kameleon);
  }

  public static void ccmc_Interpolator_delete(Interpolator interpolator) {
    CCMCJNI.ccmc_Interpolator_delete(Interpolator.getCPtr(interpolator), interpolator);
  }

}
